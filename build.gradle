buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
        classpath 'nu.studer:gradle-jooq-plugin:2.0.9'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'

bootJar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'mysql:mysql-connector-java'
    compile "org.flywaydb:flyway-core:5.1.1"
    compile "org.springframework.boot:spring-boot-starter-jooq"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile 'joda-time:joda-time:2.10'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.0-alpha4'


    jooqRuntime 'mysql:mysql-connector-java'

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jooq {
    sample(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://localhost:3306/auth_java'
            user = 'root'
            password = '1q9o9o4r'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'auth_java'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.artilligence.auth_server'
                directory = 'src/main/generated/java'
            }
        }
    }
}