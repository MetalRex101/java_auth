/*
 * This file is generated by jOOQ.
*/
package com.artilligence.auth_server;


import com.artilligence.auth_server.tables.Emails;
import com.artilligence.auth_server.tables.FlywaySchemaHistory;
import com.artilligence.auth_server.tables.OauthClients;
import com.artilligence.auth_server.tables.OauthSessions;
import com.artilligence.auth_server.tables.Passwords;
import com.artilligence.auth_server.tables.Phones;
import com.artilligence.auth_server.tables.Roles;
import com.artilligence.auth_server.tables.UserRole;
import com.artilligence.auth_server.tables.Users;
import com.artilligence.auth_server.tables.records.EmailsRecord;
import com.artilligence.auth_server.tables.records.FlywaySchemaHistoryRecord;
import com.artilligence.auth_server.tables.records.OauthClientsRecord;
import com.artilligence.auth_server.tables.records.OauthSessionsRecord;
import com.artilligence.auth_server.tables.records.PasswordsRecord;
import com.artilligence.auth_server.tables.records.PhonesRecord;
import com.artilligence.auth_server.tables.records.RolesRecord;
import com.artilligence.auth_server.tables.records.UserRoleRecord;
import com.artilligence.auth_server.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>auth_java</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<EmailsRecord, UInteger> IDENTITY_EMAILS = Identities0.IDENTITY_EMAILS;
    public static final Identity<OauthClientsRecord, UInteger> IDENTITY_OAUTH_CLIENTS = Identities0.IDENTITY_OAUTH_CLIENTS;
    public static final Identity<OauthSessionsRecord, UInteger> IDENTITY_OAUTH_SESSIONS = Identities0.IDENTITY_OAUTH_SESSIONS;
    public static final Identity<PasswordsRecord, UInteger> IDENTITY_PASSWORDS = Identities0.IDENTITY_PASSWORDS;
    public static final Identity<PhonesRecord, UInteger> IDENTITY_PHONES = Identities0.IDENTITY_PHONES;
    public static final Identity<RolesRecord, UInteger> IDENTITY_ROLES = Identities0.IDENTITY_ROLES;
    public static final Identity<UsersRecord, UInteger> IDENTITY_USERS = Identities0.IDENTITY_USERS;
    public static final Identity<UserRoleRecord, UInteger> IDENTITY_USER_ROLE = Identities0.IDENTITY_USER_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EmailsRecord> KEY_EMAILS_PRIMARY = UniqueKeys0.KEY_EMAILS_PRIMARY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = UniqueKeys0.KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY;
    public static final UniqueKey<OauthClientsRecord> KEY_OAUTH_CLIENTS_PRIMARY = UniqueKeys0.KEY_OAUTH_CLIENTS_PRIMARY;
    public static final UniqueKey<OauthSessionsRecord> KEY_OAUTH_SESSIONS_PRIMARY = UniqueKeys0.KEY_OAUTH_SESSIONS_PRIMARY;
    public static final UniqueKey<OauthSessionsRecord> KEY_OAUTH_SESSIONS_UNIQUE = UniqueKeys0.KEY_OAUTH_SESSIONS_UNIQUE;
    public static final UniqueKey<PasswordsRecord> KEY_PASSWORDS_PRIMARY = UniqueKeys0.KEY_PASSWORDS_PRIMARY;
    public static final UniqueKey<PhonesRecord> KEY_PHONES_PRIMARY = UniqueKeys0.KEY_PHONES_PRIMARY;
    public static final UniqueKey<RolesRecord> KEY_ROLES_PRIMARY = UniqueKeys0.KEY_ROLES_PRIMARY;
    public static final UniqueKey<RolesRecord> KEY_ROLES_CODE = UniqueKeys0.KEY_ROLES_CODE;
    public static final UniqueKey<RolesRecord> KEY_ROLES_NAME = UniqueKeys0.KEY_ROLES_NAME;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;
    public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_PRIMARY = UniqueKeys0.KEY_USER_ROLE_PRIMARY;
    public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_USER_ROLE_USER_ID_ROLE_ID_UNIQUE = UniqueKeys0.KEY_USER_ROLE_USER_ROLE_USER_ID_ROLE_ID_UNIQUE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<EmailsRecord, UInteger> IDENTITY_EMAILS = createIdentity(Emails.EMAILS, Emails.EMAILS.ID);
        public static Identity<OauthClientsRecord, UInteger> IDENTITY_OAUTH_CLIENTS = createIdentity(OauthClients.OAUTH_CLIENTS, OauthClients.OAUTH_CLIENTS.ID);
        public static Identity<OauthSessionsRecord, UInteger> IDENTITY_OAUTH_SESSIONS = createIdentity(OauthSessions.OAUTH_SESSIONS, OauthSessions.OAUTH_SESSIONS.ID);
        public static Identity<PasswordsRecord, UInteger> IDENTITY_PASSWORDS = createIdentity(Passwords.PASSWORDS, Passwords.PASSWORDS.ID);
        public static Identity<PhonesRecord, UInteger> IDENTITY_PHONES = createIdentity(Phones.PHONES, Phones.PHONES.ID);
        public static Identity<RolesRecord, UInteger> IDENTITY_ROLES = createIdentity(Roles.ROLES, Roles.ROLES.ID);
        public static Identity<UsersRecord, UInteger> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.ID);
        public static Identity<UserRoleRecord, UInteger> IDENTITY_USER_ROLE = createIdentity(UserRole.USER_ROLE, UserRole.USER_ROLE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<EmailsRecord> KEY_EMAILS_PRIMARY = createUniqueKey(Emails.EMAILS, "KEY_emails_PRIMARY", Emails.EMAILS.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "KEY_flyway_schema_history_PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<OauthClientsRecord> KEY_OAUTH_CLIENTS_PRIMARY = createUniqueKey(OauthClients.OAUTH_CLIENTS, "KEY_oauth_clients_PRIMARY", OauthClients.OAUTH_CLIENTS.ID);
        public static final UniqueKey<OauthSessionsRecord> KEY_OAUTH_SESSIONS_PRIMARY = createUniqueKey(OauthSessions.OAUTH_SESSIONS, "KEY_oauth_sessions_PRIMARY", OauthSessions.OAUTH_SESSIONS.ID);
        public static final UniqueKey<OauthSessionsRecord> KEY_OAUTH_SESSIONS_UNIQUE = createUniqueKey(OauthSessions.OAUTH_SESSIONS, "KEY_oauth_sessions_UNIQUE", OauthSessions.OAUTH_SESSIONS.CLIENT_ID, OauthSessions.OAUTH_SESSIONS.USER_ID);
        public static final UniqueKey<PasswordsRecord> KEY_PASSWORDS_PRIMARY = createUniqueKey(Passwords.PASSWORDS, "KEY_passwords_PRIMARY", Passwords.PASSWORDS.ID);
        public static final UniqueKey<PhonesRecord> KEY_PHONES_PRIMARY = createUniqueKey(Phones.PHONES, "KEY_phones_PRIMARY", Phones.PHONES.ID);
        public static final UniqueKey<RolesRecord> KEY_ROLES_PRIMARY = createUniqueKey(Roles.ROLES, "KEY_roles_PRIMARY", Roles.ROLES.ID);
        public static final UniqueKey<RolesRecord> KEY_ROLES_CODE = createUniqueKey(Roles.ROLES, "KEY_roles_code", Roles.ROLES.CODE);
        public static final UniqueKey<RolesRecord> KEY_ROLES_NAME = createUniqueKey(Roles.ROLES, "KEY_roles_name", Roles.ROLES.NAME);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.ID);
        public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_PRIMARY = createUniqueKey(UserRole.USER_ROLE, "KEY_user_role_PRIMARY", UserRole.USER_ROLE.ID);
        public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_USER_ROLE_USER_ID_ROLE_ID_UNIQUE = createUniqueKey(UserRole.USER_ROLE, "KEY_user_role_user_role_user_id_role_id_unique", UserRole.USER_ROLE.USER_ID, UserRole.USER_ROLE.ROLE_ID);
    }
}
