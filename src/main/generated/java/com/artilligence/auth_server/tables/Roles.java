/*
 * This file is generated by jOOQ.
*/
package com.artilligence.auth_server.tables;


import com.artilligence.auth_server.AuthJava;
import com.artilligence.auth_server.Indexes;
import com.artilligence.auth_server.Keys;
import com.artilligence.auth_server.tables.records.RolesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * ???? ?????????????
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roles extends TableImpl<RolesRecord> {

    private static final long serialVersionUID = 101589258;

    /**
     * The reference instance of <code>auth_java.roles</code>
     */
    public static final Roles ROLES = new Roles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolesRecord> getRecordType() {
        return RolesRecord.class;
    }

    /**
     * The column <code>auth_java.roles.id</code>.
     */
    public final TableField<RolesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>auth_java.roles.code</code>. ??? ????
     */
    public final TableField<RolesRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "??? ????");

    /**
     * The column <code>auth_java.roles.name</code>. ????????
     */
    public final TableField<RolesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "????????");

    /**
     * The column <code>auth_java.roles.description</code>. ????????
     */
    public final TableField<RolesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "????????");

    /**
     * The column <code>auth_java.roles.synthetic</code>. ????????????? ????
     */
    public final TableField<RolesRecord, Byte> SYNTHETIC = createField("synthetic", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "????????????? ????");

    /**
     * The column <code>auth_java.roles.created_at</code>. ????? ????????
     */
    public final TableField<RolesRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "????? ????????");

    /**
     * The column <code>auth_java.roles.updated_at</code>. ????? ??????????
     */
    public final TableField<RolesRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "????? ??????????");

    /**
     * The column <code>auth_java.roles.creator_id</code>. ????????? ??????
     */
    public final TableField<RolesRecord, UInteger> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "????????? ??????");

    /**
     * The column <code>auth_java.roles.editor_id</code>. ???????? ??????
     */
    public final TableField<RolesRecord, UInteger> EDITOR_ID = createField("editor_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "???????? ??????");

    /**
     * The column <code>auth_java.roles.status</code>. ???./????.
     */
    public final TableField<RolesRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "???./????.");

    /**
     * Create a <code>auth_java.roles</code> table reference
     */
    public Roles() {
        this(DSL.name("roles"), null);
    }

    /**
     * Create an aliased <code>auth_java.roles</code> table reference
     */
    public Roles(String alias) {
        this(DSL.name(alias), ROLES);
    }

    /**
     * Create an aliased <code>auth_java.roles</code> table reference
     */
    public Roles(Name alias) {
        this(alias, ROLES);
    }

    private Roles(Name alias, Table<RolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roles(Name alias, Table<RolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "???? ?????????????");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AuthJava.AUTH_JAVA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROLES_CODE, Indexes.ROLES_NAME, Indexes.ROLES_PRIMARY, Indexes.ROLES_ROLES_CREATOR_ID_INDEX, Indexes.ROLES_ROLES_EDITOR_ID_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RolesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ROLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolesRecord> getPrimaryKey() {
        return Keys.KEY_ROLES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolesRecord>> getKeys() {
        return Arrays.<UniqueKey<RolesRecord>>asList(Keys.KEY_ROLES_PRIMARY, Keys.KEY_ROLES_CODE, Keys.KEY_ROLES_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roles as(String alias) {
        return new Roles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roles as(Name alias) {
        return new Roles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roles rename(String name) {
        return new Roles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Roles rename(Name name) {
        return new Roles(name, null);
    }
}
