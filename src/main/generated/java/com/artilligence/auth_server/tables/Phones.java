/*
 * This file is generated by jOOQ.
*/
package com.artilligence.auth_server.tables;


import com.artilligence.auth_server.AuthJava;
import com.artilligence.auth_server.Indexes;
import com.artilligence.auth_server.Keys;
import com.artilligence.auth_server.tables.records.PhonesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Phones extends TableImpl<PhonesRecord> {

    private static final long serialVersionUID = -1315119937;

    /**
     * The reference instance of <code>auth_java.phones</code>
     */
    public static final Phones PHONES = new Phones();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhonesRecord> getRecordType() {
        return PhonesRecord.class;
    }

    /**
     * The column <code>auth_java.phones.id</code>.
     */
    public final TableField<PhonesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>auth_java.phones.user_id</code>.
     */
    public final TableField<PhonesRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>auth_java.phones.oauth</code>. ? ????? ??????? oauth-???????? ?????????
     */
    public final TableField<PhonesRecord, String> OAUTH = createField("oauth", org.jooq.impl.SQLDataType.VARCHAR(255), this, "? ????? ??????? oauth-???????? ?????????");

    /**
     * The column <code>auth_java.phones.phone</code>. ????? ????????
     */
    public final TableField<PhonesRecord, ULong> PHONE = createField("phone", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "????? ????????");

    /**
     * The column <code>auth_java.phones.status</code>. ???./????.
     */
    public final TableField<PhonesRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "???./????.");

    /**
     * The column <code>auth_java.phones.is_default</code>. ????????
     */
    public final TableField<PhonesRecord, Byte> IS_DEFAULT = createField("is_default", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "????????");

    /**
     * The column <code>auth_java.phones.confirm_date</code>. ???????????
     */
    public final TableField<PhonesRecord, Timestamp> CONFIRM_DATE = createField("confirm_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "???????????");

    /**
     * The column <code>auth_java.phones.code</code>. ??? ?????????
     */
    public final TableField<PhonesRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(90), this, "??? ?????????");

    /**
     * The column <code>auth_java.phones.created_at</code>. ????? ????????
     */
    public final TableField<PhonesRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "????? ????????");

    /**
     * Create a <code>auth_java.phones</code> table reference
     */
    public Phones() {
        this(DSL.name("phones"), null);
    }

    /**
     * Create an aliased <code>auth_java.phones</code> table reference
     */
    public Phones(String alias) {
        this(DSL.name(alias), PHONES);
    }

    /**
     * Create an aliased <code>auth_java.phones</code> table reference
     */
    public Phones(Name alias) {
        this(alias, PHONES);
    }

    private Phones(Name alias, Table<PhonesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Phones(Name alias, Table<PhonesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AuthJava.AUTH_JAVA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PHONES_PHONES_CONFIRM_DATE_INDEX, Indexes.PHONES_PHONES_OAUTH_INDEX, Indexes.PHONES_PHONES_PHONE_INDEX, Indexes.PHONES_PHONES_STATUS_INDEX, Indexes.PHONES_PHONES_USER_ID_INDEX, Indexes.PHONES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PhonesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PHONES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PhonesRecord> getPrimaryKey() {
        return Keys.KEY_PHONES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PhonesRecord>> getKeys() {
        return Arrays.<UniqueKey<PhonesRecord>>asList(Keys.KEY_PHONES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Phones as(String alias) {
        return new Phones(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Phones as(Name alias) {
        return new Phones(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Phones rename(String name) {
        return new Phones(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Phones rename(Name name) {
        return new Phones(name, null);
    }
}
