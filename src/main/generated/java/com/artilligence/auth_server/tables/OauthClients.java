/*
 * This file is generated by jOOQ.
*/
package com.artilligence.auth_server.tables;


import com.artilligence.auth_server.AuthJava;
import com.artilligence.auth_server.Indexes;
import com.artilligence.auth_server.Keys;
import com.artilligence.auth_server.tables.records.OauthClientsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthClients extends TableImpl<OauthClientsRecord> {

    private static final long serialVersionUID = -1705060015;

    /**
     * The reference instance of <code>auth_java.oauth_clients</code>
     */
    public static final OauthClients OAUTH_CLIENTS = new OauthClients();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OauthClientsRecord> getRecordType() {
        return OauthClientsRecord.class;
    }

    /**
     * The column <code>auth_java.oauth_clients.id</code>.
     */
    public final TableField<OauthClientsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>auth_java.oauth_clients.status</code>. ???./????.
     */
    public final TableField<OauthClientsRecord, UByte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "???./????.");

    /**
     * The column <code>auth_java.oauth_clients.name</code>. ????????
     */
    public final TableField<OauthClientsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "????????");

    /**
     * The column <code>auth_java.oauth_clients.client_id</code>. client_id
     */
    public final TableField<OauthClientsRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "client_id");

    /**
     * The column <code>auth_java.oauth_clients.client_secret</code>. client_secret
     */
    public final TableField<OauthClientsRecord, String> CLIENT_SECRET = createField("client_secret", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "client_secret");

    /**
     * The column <code>auth_java.oauth_clients.template</code>. ??????? ???
     */
    public final TableField<OauthClientsRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.VARCHAR(50), this, "??????? ???");

    /**
     * The column <code>auth_java.oauth_clients.ip</code>. IP-????? ???????
     */
    public final TableField<OauthClientsRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(96).nullable(false), this, "IP-????? ???????");

    /**
     * The column <code>auth_java.oauth_clients.url</code>. ????? ?????
     */
    public final TableField<OauthClientsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "????? ?????");

    /**
     * The column <code>auth_java.oauth_clients.scope</code>. ????? ???????
     */
    public final TableField<OauthClientsRecord, String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.VARCHAR(255), this, "????? ???????");

    /**
     * Create a <code>auth_java.oauth_clients</code> pojo reference
     */
    public OauthClients() {
        this(DSL.name("oauth_clients"), null);
    }

    /**
     * Create an aliased <code>auth_java.oauth_clients</code> pojo reference
     */
    public OauthClients(String alias) {
        this(DSL.name(alias), OAUTH_CLIENTS);
    }

    /**
     * Create an aliased <code>auth_java.oauth_clients</code> pojo reference
     */
    public OauthClients(Name alias) {
        this(alias, OAUTH_CLIENTS);
    }

    private OauthClients(Name alias, Table<OauthClientsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OauthClients(Name alias, Table<OauthClientsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AuthJava.AUTH_JAVA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OAUTH_CLIENTS_OAUTH_CLIENT_CLIENT_ID_INDEX, Indexes.OAUTH_CLIENTS_OAUTH_CLIENT_CLIENT_SECRET_INDEX, Indexes.OAUTH_CLIENTS_OAUTH_CLIENT_STATUS_INDEX, Indexes.OAUTH_CLIENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OauthClientsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_OAUTH_CLIENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OauthClientsRecord> getPrimaryKey() {
        return Keys.KEY_OAUTH_CLIENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OauthClientsRecord>> getKeys() {
        return Arrays.<UniqueKey<OauthClientsRecord>>asList(Keys.KEY_OAUTH_CLIENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthClients as(String alias) {
        return new OauthClients(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthClients as(Name alias) {
        return new OauthClients(alias, this);
    }

    /**
     * Rename this pojo
     */
    @Override
    public OauthClients rename(String name) {
        return new OauthClients(DSL.name(name), null);
    }

    /**
     * Rename this pojo
     */
    @Override
    public OauthClients rename(Name name) {
        return new OauthClients(name, null);
    }
}
